import streamlit as st
import plotly.express as px
import plotly.graph_objects as go
import matplotlib.pyplot as plt
from streamlit_extras.metric_cards import style_metric_cards

def puntaje_por_a√±o():
    st.header("An√°lisis por A√±o üìÖ")

    # Verifica si los datos est√°n en session_state
    if "datos_filtrados" not in st.session_state:
        st.warning("No se han cargado datos a√∫n.")
        return
    
    # cargar los datos
    df = st.session_state["datos"]

    ###############################################################################################
    # filtrar datos por grado seleccionado
    df0 = df[df['Grupo'].str.startswith(st.session_state["grado_seleccionado"])]

    df3 = df0.groupby(['A√ëO','SIMULACRO'])[["Puntaje global","Matem√°ticas", "Lectura cr√≠tica", "Ciencias naturales", "Sociales y ciudadanas", "Ingl√©s"]].mean().round(2).reset_index().melt(id_vars=["A√ëO","SIMULACRO"], var_name="√Årea", value_name="Promedio")
    #st.dataframe(df3.reset_index(drop=True), use_container_width=True, hide_index=True)
    
    # Crear selector para el √°rea
    area_seleccionad = st.selectbox("Seleccione un √°rea:", df3["√Årea"].unique(), key="area_seleccionad")
    # Realizamos grafico de barras
    fig = px.bar(df3[df3["√Årea"] == area_seleccionad],
                 x="A√ëO",
                 y="Promedio",
                 color = 'SIMULACRO',
                 barmode='group',
                 text_auto=True,
                 category_orders={'SIMULACRO': ['S1', 'S2', 'S3', 'ED1', 'ICFES']},  # <- Orden definido
                 color_discrete_map={
                        'S1': '#83c9ff',
                        'S2': 'red',
                        'ED1': 'teal',
                        'S3': 'pink',
                        'ICFES': "#1466c3"
                    }
                 
                 )
    # Actualizar el dise√±o para etiquetas y t√≠tulo
    fig.update_layout(
        xaxis_title="√Årea",
        yaxis_title="Puntaje global",
        title=f"Comparativo puntaje global por prueba para cada a√±o"
    )
    # Mostrar el gr√°fico
    st.plotly_chart(fig)
    
    # filtrar datos por grado once de 2025 y grado decimo de 2024
    df1 = df[((df['A√ëO'] == '2025') & (df['Grupo'].str.startswith('110'))) | ((df['A√ëO'] == '2024') & (df['Grupo'].str.startswith('100')))]

    # Agrupamos por a√±o y calculamos los promedios de las areas
    df2 = df1.groupby(['A√ëO'])[["Puntaje global","Matem√°ticas", "Lectura cr√≠tica", "Ciencias naturales", "Sociales y ciudadanas", "Ingl√©s"]].mean().round(2).reset_index().melt(id_vars="A√ëO", var_name="√Årea", value_name="Promedio")

    # Realizamos grafico de barras
    fig = px.bar(df2[df2["√Årea"] == "Puntaje global"],
                 x="Promedio",
                 y="√Årea",
                 color = 'A√ëO',
                 barmode='group',
                 text_auto=True
                 )
    # Actualizar el dise√±o para etiquetas y t√≠tulo
    fig.update_layout(
        xaxis_title="√Årea",
        yaxis_title="Puntaje promedio",
        title=f"Comparativo puntaje global d√©cimo 2024 vs once 2025"
    )
    # Mostrar el gr√°fico
    st.plotly_chart(fig)

    # Realizamos grafico de barras
    fig = px.bar(df2[df2["√Årea"] != "Puntaje global"],
                 x="√Årea",
                 y="Promedio",
                 color = 'A√ëO',
                 barmode='group',
                 text_auto=True
                 )
    # Actualizar el dise√±o para etiquetas y t√≠tulo
    fig.update_layout(
        xaxis_title="√Årea",
        yaxis_title="Puntaje promedio",
        title=f"Comparativo d√©cimo 2024 vs once 2025 por √°rea"
    )
    # Mostrar el gr√°fico
    st.plotly_chart(fig)

    col1, col2 = st.columns(2)
    with col1:

        # Mostrar los 10 primeros registros de los datos filtrados
        st.subheader("Mejores 10 puntaje global en 2024")
        df_top_10_2024 = df1[df1.A√ëO == "2024"].sort_values(by='Puntaje global', ascending=False).head(10)
        df_top_10_2024 = df_top_10_2024[["Grupo","Nombre alumno","Puntaje global"]].reset_index(drop=True)

        st.dataframe(df_top_10_2024, use_container_width=True, hide_index=True)
    with col2:
        # Mostrar los 10 primeros registros de los datos filtrados
        st.subheader("Mejores 10 puntaje global en 2025")
        df_top_10_2025 = df1[df1.A√ëO == "2025"].sort_values(by='Puntaje global', ascending=False).head(10)
        df_top_10_2025 = df_top_10_2025[["Grupo","Nombre alumno","Puntaje global"]].reset_index(drop=True)

        st.dataframe(df_top_10_2025, use_container_width=True, hide_index=True)
    #st.dataframe(st.session_state["datos"])
    #st.dataframe(df2.reset_index(drop=True), use_container_width=True, hide_index=True)
